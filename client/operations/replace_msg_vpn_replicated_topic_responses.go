// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// ReplaceMsgVpnReplicatedTopicReader is a Reader for the ReplaceMsgVpnReplicatedTopic structure.
type ReplaceMsgVpnReplicatedTopicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceMsgVpnReplicatedTopicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReplaceMsgVpnReplicatedTopicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewReplaceMsgVpnReplicatedTopicDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceMsgVpnReplicatedTopicOK creates a ReplaceMsgVpnReplicatedTopicOK with default headers values
func NewReplaceMsgVpnReplicatedTopicOK() *ReplaceMsgVpnReplicatedTopicOK {
	return &ReplaceMsgVpnReplicatedTopicOK{}
}

/*ReplaceMsgVpnReplicatedTopicOK handles this case with default header values.

The Replicated Topic object's attributes after being replaced, and the request metadata.
*/
type ReplaceMsgVpnReplicatedTopicOK struct {
	Payload *models.MsgVpnReplicatedTopicResponse
}

func (o *ReplaceMsgVpnReplicatedTopicOK) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}][%d] replaceMsgVpnReplicatedTopicOK  %+v", 200, o.Payload)
}

func (o *ReplaceMsgVpnReplicatedTopicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnReplicatedTopicResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceMsgVpnReplicatedTopicDefault creates a ReplaceMsgVpnReplicatedTopicDefault with default headers values
func NewReplaceMsgVpnReplicatedTopicDefault(code int) *ReplaceMsgVpnReplicatedTopicDefault {
	return &ReplaceMsgVpnReplicatedTopicDefault{
		_statusCode: code,
	}
}

/*ReplaceMsgVpnReplicatedTopicDefault handles this case with default header values.

The error response.
*/
type ReplaceMsgVpnReplicatedTopicDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the replace msg vpn replicated topic default response
func (o *ReplaceMsgVpnReplicatedTopicDefault) Code() int {
	return o._statusCode
}

func (o *ReplaceMsgVpnReplicatedTopicDefault) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}][%d] replaceMsgVpnReplicatedTopic default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceMsgVpnReplicatedTopicDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
