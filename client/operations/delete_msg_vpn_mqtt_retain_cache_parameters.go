// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteMsgVpnMqttRetainCacheParams creates a new DeleteMsgVpnMqttRetainCacheParams object
// with the default values initialized.
func NewDeleteMsgVpnMqttRetainCacheParams() *DeleteMsgVpnMqttRetainCacheParams {
	var ()
	return &DeleteMsgVpnMqttRetainCacheParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMsgVpnMqttRetainCacheParamsWithTimeout creates a new DeleteMsgVpnMqttRetainCacheParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteMsgVpnMqttRetainCacheParamsWithTimeout(timeout time.Duration) *DeleteMsgVpnMqttRetainCacheParams {
	var ()
	return &DeleteMsgVpnMqttRetainCacheParams{

		timeout: timeout,
	}
}

// NewDeleteMsgVpnMqttRetainCacheParamsWithContext creates a new DeleteMsgVpnMqttRetainCacheParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteMsgVpnMqttRetainCacheParamsWithContext(ctx context.Context) *DeleteMsgVpnMqttRetainCacheParams {
	var ()
	return &DeleteMsgVpnMqttRetainCacheParams{

		Context: ctx,
	}
}

// NewDeleteMsgVpnMqttRetainCacheParamsWithHTTPClient creates a new DeleteMsgVpnMqttRetainCacheParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteMsgVpnMqttRetainCacheParamsWithHTTPClient(client *http.Client) *DeleteMsgVpnMqttRetainCacheParams {
	var ()
	return &DeleteMsgVpnMqttRetainCacheParams{
		HTTPClient: client,
	}
}

/*DeleteMsgVpnMqttRetainCacheParams contains all the parameters to send to the API endpoint
for the delete msg vpn mqtt retain cache operation typically these are written to a http.Request
*/
type DeleteMsgVpnMqttRetainCacheParams struct {

	/*CacheName
	  The name of the MQTT Retain Cache.

	*/
	CacheName string
	/*MsgVpnName
	  The name of the Message VPN.

	*/
	MsgVpnName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) WithTimeout(timeout time.Duration) *DeleteMsgVpnMqttRetainCacheParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) WithContext(ctx context.Context) *DeleteMsgVpnMqttRetainCacheParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) WithHTTPClient(client *http.Client) *DeleteMsgVpnMqttRetainCacheParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCacheName adds the cacheName to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) WithCacheName(cacheName string) *DeleteMsgVpnMqttRetainCacheParams {
	o.SetCacheName(cacheName)
	return o
}

// SetCacheName adds the cacheName to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) SetCacheName(cacheName string) {
	o.CacheName = cacheName
}

// WithMsgVpnName adds the msgVpnName to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) WithMsgVpnName(msgVpnName string) *DeleteMsgVpnMqttRetainCacheParams {
	o.SetMsgVpnName(msgVpnName)
	return o
}

// SetMsgVpnName adds the msgVpnName to the delete msg vpn mqtt retain cache params
func (o *DeleteMsgVpnMqttRetainCacheParams) SetMsgVpnName(msgVpnName string) {
	o.MsgVpnName = msgVpnName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMsgVpnMqttRetainCacheParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cacheName
	if err := r.SetPathParam("cacheName", o.CacheName); err != nil {
		return err
	}

	// path param msgVpnName
	if err := r.SetPathParam("msgVpnName", o.MsgVpnName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
