// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// GetMsgVpnMqttSessionReader is a Reader for the GetMsgVpnMqttSession structure.
type GetMsgVpnMqttSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMsgVpnMqttSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMsgVpnMqttSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetMsgVpnMqttSessionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMsgVpnMqttSessionOK creates a GetMsgVpnMqttSessionOK with default headers values
func NewGetMsgVpnMqttSessionOK() *GetMsgVpnMqttSessionOK {
	return &GetMsgVpnMqttSessionOK{}
}

/*GetMsgVpnMqttSessionOK handles this case with default header values.

The MQTT Session object's attributes, and the request metadata.
*/
type GetMsgVpnMqttSessionOK struct {
	Payload *models.MsgVpnMqttSessionResponse
}

func (o *GetMsgVpnMqttSessionOK) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}][%d] getMsgVpnMqttSessionOK  %+v", 200, o.Payload)
}

func (o *GetMsgVpnMqttSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnMqttSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMsgVpnMqttSessionDefault creates a GetMsgVpnMqttSessionDefault with default headers values
func NewGetMsgVpnMqttSessionDefault(code int) *GetMsgVpnMqttSessionDefault {
	return &GetMsgVpnMqttSessionDefault{
		_statusCode: code,
	}
}

/*GetMsgVpnMqttSessionDefault handles this case with default header values.

Error response
*/
type GetMsgVpnMqttSessionDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the get msg vpn mqtt session default response
func (o *GetMsgVpnMqttSessionDefault) Code() int {
	return o._statusCode
}

func (o *GetMsgVpnMqttSessionDefault) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}][%d] getMsgVpnMqttSession default  %+v", o._statusCode, o.Payload)
}

func (o *GetMsgVpnMqttSessionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
