// Code generated by go-swagger; DO NOT EDIT.

package username

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// DeleteUsernameReader is a Reader for the DeleteUsername structure.
type DeleteUsernameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUsernameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteUsernameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDeleteUsernameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteUsernameOK creates a DeleteUsernameOK with default headers values
func NewDeleteUsernameOK() *DeleteUsernameOK {
	return &DeleteUsernameOK{}
}

/*DeleteUsernameOK handles this case with default header values.

The request metadata.
*/
type DeleteUsernameOK struct {
	Payload *models.SempMetaOnlyResponse
}

func (o *DeleteUsernameOK) Error() string {
	return fmt.Sprintf("[DELETE /usernames/{userName}][%d] deleteUsernameOK  %+v", 200, o.Payload)
}

func (o *DeleteUsernameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUsernameDefault creates a DeleteUsernameDefault with default headers values
func NewDeleteUsernameDefault(code int) *DeleteUsernameDefault {
	return &DeleteUsernameDefault{
		_statusCode: code,
	}
}

/*DeleteUsernameDefault handles this case with default header values.

The error response.
*/
type DeleteUsernameDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the delete username default response
func (o *DeleteUsernameDefault) Code() int {
	return o._statusCode
}

func (o *DeleteUsernameDefault) Error() string {
	return fmt.Sprintf("[DELETE /usernames/{userName}][%d] deleteUsername default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteUsernameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
