// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// NewCreateMsgVpnDistributedCacheParams creates a new CreateMsgVpnDistributedCacheParams object
// with the default values initialized.
func NewCreateMsgVpnDistributedCacheParams() *CreateMsgVpnDistributedCacheParams {
	var ()
	return &CreateMsgVpnDistributedCacheParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateMsgVpnDistributedCacheParamsWithTimeout creates a new CreateMsgVpnDistributedCacheParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateMsgVpnDistributedCacheParamsWithTimeout(timeout time.Duration) *CreateMsgVpnDistributedCacheParams {
	var ()
	return &CreateMsgVpnDistributedCacheParams{

		timeout: timeout,
	}
}

// NewCreateMsgVpnDistributedCacheParamsWithContext creates a new CreateMsgVpnDistributedCacheParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateMsgVpnDistributedCacheParamsWithContext(ctx context.Context) *CreateMsgVpnDistributedCacheParams {
	var ()
	return &CreateMsgVpnDistributedCacheParams{

		Context: ctx,
	}
}

// NewCreateMsgVpnDistributedCacheParamsWithHTTPClient creates a new CreateMsgVpnDistributedCacheParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateMsgVpnDistributedCacheParamsWithHTTPClient(client *http.Client) *CreateMsgVpnDistributedCacheParams {
	var ()
	return &CreateMsgVpnDistributedCacheParams{
		HTTPClient: client,
	}
}

/*CreateMsgVpnDistributedCacheParams contains all the parameters to send to the API endpoint
for the create msg vpn distributed cache operation typically these are written to a http.Request
*/
type CreateMsgVpnDistributedCacheParams struct {

	/*Body
	  The Distributed Cache object's attributes.

	*/
	Body *models.MsgVpnDistributedCache
	/*MsgVpnName
	  The name of the Message VPN.

	*/
	MsgVpnName string
	/*Select
	  Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.

	*/
	Select []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) WithTimeout(timeout time.Duration) *CreateMsgVpnDistributedCacheParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) WithContext(ctx context.Context) *CreateMsgVpnDistributedCacheParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) WithHTTPClient(client *http.Client) *CreateMsgVpnDistributedCacheParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) WithBody(body *models.MsgVpnDistributedCache) *CreateMsgVpnDistributedCacheParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) SetBody(body *models.MsgVpnDistributedCache) {
	o.Body = body
}

// WithMsgVpnName adds the msgVpnName to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) WithMsgVpnName(msgVpnName string) *CreateMsgVpnDistributedCacheParams {
	o.SetMsgVpnName(msgVpnName)
	return o
}

// SetMsgVpnName adds the msgVpnName to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) SetMsgVpnName(msgVpnName string) {
	o.MsgVpnName = msgVpnName
}

// WithSelect adds the selectVar to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) WithSelect(selectVar []string) *CreateMsgVpnDistributedCacheParams {
	o.SetSelect(selectVar)
	return o
}

// SetSelect adds the select to the create msg vpn distributed cache params
func (o *CreateMsgVpnDistributedCacheParams) SetSelect(selectVar []string) {
	o.Select = selectVar
}

// WriteToRequest writes these params to a swagger request
func (o *CreateMsgVpnDistributedCacheParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param msgVpnName
	if err := r.SetPathParam("msgVpnName", o.MsgVpnName); err != nil {
		return err
	}

	valuesSelect := o.Select

	joinedSelect := swag.JoinByFormat(valuesSelect, "csv")
	// query array param select
	if err := r.SetQueryParam("select", joinedSelect...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
