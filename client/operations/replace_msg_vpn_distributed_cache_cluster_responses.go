// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// ReplaceMsgVpnDistributedCacheClusterReader is a Reader for the ReplaceMsgVpnDistributedCacheCluster structure.
type ReplaceMsgVpnDistributedCacheClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceMsgVpnDistributedCacheClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReplaceMsgVpnDistributedCacheClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewReplaceMsgVpnDistributedCacheClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceMsgVpnDistributedCacheClusterOK creates a ReplaceMsgVpnDistributedCacheClusterOK with default headers values
func NewReplaceMsgVpnDistributedCacheClusterOK() *ReplaceMsgVpnDistributedCacheClusterOK {
	return &ReplaceMsgVpnDistributedCacheClusterOK{}
}

/*ReplaceMsgVpnDistributedCacheClusterOK handles this case with default header values.

The Cache Cluster object's attributes after being replaced, and the request metadata.
*/
type ReplaceMsgVpnDistributedCacheClusterOK struct {
	Payload *models.MsgVpnDistributedCacheClusterResponse
}

func (o *ReplaceMsgVpnDistributedCacheClusterOK) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}][%d] replaceMsgVpnDistributedCacheClusterOK  %+v", 200, o.Payload)
}

func (o *ReplaceMsgVpnDistributedCacheClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnDistributedCacheClusterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceMsgVpnDistributedCacheClusterDefault creates a ReplaceMsgVpnDistributedCacheClusterDefault with default headers values
func NewReplaceMsgVpnDistributedCacheClusterDefault(code int) *ReplaceMsgVpnDistributedCacheClusterDefault {
	return &ReplaceMsgVpnDistributedCacheClusterDefault{
		_statusCode: code,
	}
}

/*ReplaceMsgVpnDistributedCacheClusterDefault handles this case with default header values.

The error response.
*/
type ReplaceMsgVpnDistributedCacheClusterDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the replace msg vpn distributed cache cluster default response
func (o *ReplaceMsgVpnDistributedCacheClusterDefault) Code() int {
	return o._statusCode
}

func (o *ReplaceMsgVpnDistributedCacheClusterDefault) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}][%d] replaceMsgVpnDistributedCacheCluster default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceMsgVpnDistributedCacheClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
