// Code generated by go-swagger; DO NOT EDIT.

package about

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new about API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for about API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetAboutAPI gets an API description object

Get an API Description object.

A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

This has been available since 2.2.
*/
func (a *Client) GetAboutAPI(params *GetAboutAPIParams, authInfo runtime.ClientAuthInfoWriter) (*GetAboutAPIOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAboutAPIParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAboutApi",
		Method:             "GET",
		PathPattern:        "/about/api",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetAboutAPIReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAboutAPIOK), nil

}

/*
GetAboutUser gets a user object

Get a User object.



A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

This has been available since 2.2.
*/
func (a *Client) GetAboutUser(params *GetAboutUserParams, authInfo runtime.ClientAuthInfoWriter) (*GetAboutUserOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAboutUserParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAboutUser",
		Method:             "GET",
		PathPattern:        "/about/user",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetAboutUserReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAboutUserOK), nil

}

/*
GetAboutUserMsgVpn gets a user message v p n object

Get a User Message VPN object.


Attribute|Identifying|Write-Only|Deprecated
:---|:---:|:---:|:---:
msgVpnName|x||



A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

This has been available since 2.2.
*/
func (a *Client) GetAboutUserMsgVpn(params *GetAboutUserMsgVpnParams, authInfo runtime.ClientAuthInfoWriter) (*GetAboutUserMsgVpnOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAboutUserMsgVpnParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAboutUserMsgVpn",
		Method:             "GET",
		PathPattern:        "/about/user/msgVpns/{msgVpnName}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetAboutUserMsgVpnReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAboutUserMsgVpnOK), nil

}

/*
GetAboutUserMsgVpns gets a list of user message v p n objects

Get a list of User Message VPN objects.


Attribute|Identifying|Write-Only|Deprecated
:---|:---:|:---:|:---:
msgVpnName|x||



A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

This has been available since 2.2.
*/
func (a *Client) GetAboutUserMsgVpns(params *GetAboutUserMsgVpnsParams, authInfo runtime.ClientAuthInfoWriter) (*GetAboutUserMsgVpnsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetAboutUserMsgVpnsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getAboutUserMsgVpns",
		Method:             "GET",
		PathPattern:        "/about/user/msgVpns",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http", "https"},
		Params:             params,
		Reader:             &GetAboutUserMsgVpnsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetAboutUserMsgVpnsOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
