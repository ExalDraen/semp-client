// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// MsgVpnRestDeliveryPointQueueBinding msg vpn rest delivery point queue binding
// swagger:model MsgVpnRestDeliveryPointQueueBinding
type MsgVpnRestDeliveryPointQueueBinding struct {

	// Enable or disable whether the authority for the request-target is replaced with that configured for the REST Consumer remote. When enabled, the router sends HTTP requests in absolute-form, with the request-target's authority taken from the REST Consumer's remote host and port configuration. When disabled, the router sends HTTP requests whose request-target matches that of the original request message, including whether to use absolute-form or origin-form. This configuration is applicable only when the Message VPN is in REST gateway mode. The default value is `false`. Available since 2.6.
	GatewayReplaceTargetAuthorityEnabled bool `json:"gatewayReplaceTargetAuthorityEnabled,omitempty"`

	// The name of the Message VPN.
	MsgVpnName string `json:"msgVpnName,omitempty"`

	// The POST request-target string to use when sending requests. It identifies the target resource on the far-end REST Consumer upon which to apply the POST request. There are generally two common forms for the request-target. The origin-form is most often used in practice and contains the path and query components of the target URI. If the path component is empty then the client must generally send a "/" as the path. When making a request to a proxy, most often the absolute-form is required. This configuration is only applicable when the Message VPN is in REST messaging mode. The default value is `""`.
	PostRequestTarget string `json:"postRequestTarget,omitempty"`

	// The name of a queue within this Message VPN.
	QueueBindingName string `json:"queueBindingName,omitempty"`

	// The name of the REST Delivery Point.
	RestDeliveryPointName string `json:"restDeliveryPointName,omitempty"`
}

// Validate validates this msg vpn rest delivery point queue binding
func (m *MsgVpnRestDeliveryPointQueueBinding) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MsgVpnRestDeliveryPointQueueBinding) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MsgVpnRestDeliveryPointQueueBinding) UnmarshalBinary(b []byte) error {
	var res MsgVpnRestDeliveryPointQueueBinding
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
