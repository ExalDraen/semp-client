// Code generated by go-swagger; DO NOT EDIT.

package username

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// UpdateUsernameMsgVpnAccessLevelExceptionReader is a Reader for the UpdateUsernameMsgVpnAccessLevelException structure.
type UpdateUsernameMsgVpnAccessLevelExceptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateUsernameMsgVpnAccessLevelExceptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateUsernameMsgVpnAccessLevelExceptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUpdateUsernameMsgVpnAccessLevelExceptionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateUsernameMsgVpnAccessLevelExceptionOK creates a UpdateUsernameMsgVpnAccessLevelExceptionOK with default headers values
func NewUpdateUsernameMsgVpnAccessLevelExceptionOK() *UpdateUsernameMsgVpnAccessLevelExceptionOK {
	return &UpdateUsernameMsgVpnAccessLevelExceptionOK{}
}

/*UpdateUsernameMsgVpnAccessLevelExceptionOK handles this case with default header values.

The Message VPN Access Level Exception object's attributes after being updated, and the request metadata.
*/
type UpdateUsernameMsgVpnAccessLevelExceptionOK struct {
	Payload *models.UsernameMsgVpnAccessLevelExceptionResponse
}

func (o *UpdateUsernameMsgVpnAccessLevelExceptionOK) Error() string {
	return fmt.Sprintf("[PATCH /usernames/{userName}/msgVpnAccessLevelExceptions/{msgVpnName}][%d] updateUsernameMsgVpnAccessLevelExceptionOK  %+v", 200, o.Payload)
}

func (o *UpdateUsernameMsgVpnAccessLevelExceptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UsernameMsgVpnAccessLevelExceptionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateUsernameMsgVpnAccessLevelExceptionDefault creates a UpdateUsernameMsgVpnAccessLevelExceptionDefault with default headers values
func NewUpdateUsernameMsgVpnAccessLevelExceptionDefault(code int) *UpdateUsernameMsgVpnAccessLevelExceptionDefault {
	return &UpdateUsernameMsgVpnAccessLevelExceptionDefault{
		_statusCode: code,
	}
}

/*UpdateUsernameMsgVpnAccessLevelExceptionDefault handles this case with default header values.

The error response.
*/
type UpdateUsernameMsgVpnAccessLevelExceptionDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the update username msg vpn access level exception default response
func (o *UpdateUsernameMsgVpnAccessLevelExceptionDefault) Code() int {
	return o._statusCode
}

func (o *UpdateUsernameMsgVpnAccessLevelExceptionDefault) Error() string {
	return fmt.Sprintf("[PATCH /usernames/{userName}/msgVpnAccessLevelExceptions/{msgVpnName}][%d] updateUsernameMsgVpnAccessLevelException default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateUsernameMsgVpnAccessLevelExceptionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
