// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// MsgVpnMqttRetainCache msg vpn mqtt retain cache
// swagger:model MsgVpnMqttRetainCache
type MsgVpnMqttRetainCache struct {

	// The name of the MQTT Retain Cache.
	CacheName string `json:"cacheName,omitempty"`

	// Enable or disable this MQTT Retain Cache. When the cache is disabled, neither retain messages nor retain requests will be delivered by the cache. However, live retain messages will continue to be delivered to currently connected MQTT clients. The default value is `false`.
	Enabled bool `json:"enabled,omitempty"`

	// The message lifetime, in seconds. If a message remains cached for the duration of its lifetime, the cache will remove the message. A lifetime of 0 results in the message being retained indefinitely. The default value is `0`.
	MsgLifetime int64 `json:"msgLifetime,omitempty"`

	// The name of the Message VPN.
	MsgVpnName string `json:"msgVpnName,omitempty"`
}

// Validate validates this msg vpn mqtt retain cache
func (m *MsgVpnMqttRetainCache) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MsgVpnMqttRetainCache) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MsgVpnMqttRetainCache) UnmarshalBinary(b []byte) error {
	var res MsgVpnMqttRetainCache
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
