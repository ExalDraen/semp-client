// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// GetMsgVpnReplayLogReader is a Reader for the GetMsgVpnReplayLog structure.
type GetMsgVpnReplayLogReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMsgVpnReplayLogReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMsgVpnReplayLogOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetMsgVpnReplayLogDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMsgVpnReplayLogOK creates a GetMsgVpnReplayLogOK with default headers values
func NewGetMsgVpnReplayLogOK() *GetMsgVpnReplayLogOK {
	return &GetMsgVpnReplayLogOK{}
}

/*GetMsgVpnReplayLogOK handles this case with default header values.

The Replay Log object's attributes, and the request metadata.
*/
type GetMsgVpnReplayLogOK struct {
	Payload *models.MsgVpnReplayLogResponse
}

func (o *GetMsgVpnReplayLogOK) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/replayLogs/{replayLogName}][%d] getMsgVpnReplayLogOK  %+v", 200, o.Payload)
}

func (o *GetMsgVpnReplayLogOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnReplayLogResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMsgVpnReplayLogDefault creates a GetMsgVpnReplayLogDefault with default headers values
func NewGetMsgVpnReplayLogDefault(code int) *GetMsgVpnReplayLogDefault {
	return &GetMsgVpnReplayLogDefault{
		_statusCode: code,
	}
}

/*GetMsgVpnReplayLogDefault handles this case with default header values.

The error response.
*/
type GetMsgVpnReplayLogDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the get msg vpn replay log default response
func (o *GetMsgVpnReplayLogDefault) Code() int {
	return o._statusCode
}

func (o *GetMsgVpnReplayLogDefault) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/replayLogs/{replayLogName}][%d] getMsgVpnReplayLog default  %+v", o._statusCode, o.Payload)
}

func (o *GetMsgVpnReplayLogDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
