// Code generated by go-swagger; DO NOT EDIT.

package msg_vpn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// DeleteMsgVpnSequencedTopicReader is a Reader for the DeleteMsgVpnSequencedTopic structure.
type DeleteMsgVpnSequencedTopicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMsgVpnSequencedTopicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteMsgVpnSequencedTopicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDeleteMsgVpnSequencedTopicDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteMsgVpnSequencedTopicOK creates a DeleteMsgVpnSequencedTopicOK with default headers values
func NewDeleteMsgVpnSequencedTopicOK() *DeleteMsgVpnSequencedTopicOK {
	return &DeleteMsgVpnSequencedTopicOK{}
}

/*DeleteMsgVpnSequencedTopicOK handles this case with default header values.

The request metadata.
*/
type DeleteMsgVpnSequencedTopicOK struct {
	Payload *models.SempMetaOnlyResponse
}

func (o *DeleteMsgVpnSequencedTopicOK) Error() string {
	return fmt.Sprintf("[DELETE /msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}][%d] deleteMsgVpnSequencedTopicOK  %+v", 200, o.Payload)
}

func (o *DeleteMsgVpnSequencedTopicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMsgVpnSequencedTopicDefault creates a DeleteMsgVpnSequencedTopicDefault with default headers values
func NewDeleteMsgVpnSequencedTopicDefault(code int) *DeleteMsgVpnSequencedTopicDefault {
	return &DeleteMsgVpnSequencedTopicDefault{
		_statusCode: code,
	}
}

/*DeleteMsgVpnSequencedTopicDefault handles this case with default header values.

Error response
*/
type DeleteMsgVpnSequencedTopicDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the delete msg vpn sequenced topic default response
func (o *DeleteMsgVpnSequencedTopicDefault) Code() int {
	return o._statusCode
}

func (o *DeleteMsgVpnSequencedTopicDefault) Error() string {
	return fmt.Sprintf("[DELETE /msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}][%d] deleteMsgVpnSequencedTopic default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteMsgVpnSequencedTopicDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
