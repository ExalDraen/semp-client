// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// GetMsgVpnMqttRetainCacheReader is a Reader for the GetMsgVpnMqttRetainCache structure.
type GetMsgVpnMqttRetainCacheReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMsgVpnMqttRetainCacheReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMsgVpnMqttRetainCacheOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetMsgVpnMqttRetainCacheDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMsgVpnMqttRetainCacheOK creates a GetMsgVpnMqttRetainCacheOK with default headers values
func NewGetMsgVpnMqttRetainCacheOK() *GetMsgVpnMqttRetainCacheOK {
	return &GetMsgVpnMqttRetainCacheOK{}
}

/*GetMsgVpnMqttRetainCacheOK handles this case with default header values.

The MQTT Retain Cache object's attributes, and the request metadata.
*/
type GetMsgVpnMqttRetainCacheOK struct {
	Payload *models.MsgVpnMqttRetainCacheResponse
}

func (o *GetMsgVpnMqttRetainCacheOK) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}][%d] getMsgVpnMqttRetainCacheOK  %+v", 200, o.Payload)
}

func (o *GetMsgVpnMqttRetainCacheOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnMqttRetainCacheResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMsgVpnMqttRetainCacheDefault creates a GetMsgVpnMqttRetainCacheDefault with default headers values
func NewGetMsgVpnMqttRetainCacheDefault(code int) *GetMsgVpnMqttRetainCacheDefault {
	return &GetMsgVpnMqttRetainCacheDefault{
		_statusCode: code,
	}
}

/*GetMsgVpnMqttRetainCacheDefault handles this case with default header values.

The error response.
*/
type GetMsgVpnMqttRetainCacheDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the get msg vpn mqtt retain cache default response
func (o *GetMsgVpnMqttRetainCacheDefault) Code() int {
	return o._statusCode
}

func (o *GetMsgVpnMqttRetainCacheDefault) Error() string {
	return fmt.Sprintf("[GET /msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}][%d] getMsgVpnMqttRetainCache default  %+v", o._statusCode, o.Payload)
}

func (o *GetMsgVpnMqttRetainCacheDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
