// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// UpdateMsgVpnReplicatedTopicReader is a Reader for the UpdateMsgVpnReplicatedTopic structure.
type UpdateMsgVpnReplicatedTopicReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMsgVpnReplicatedTopicReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateMsgVpnReplicatedTopicOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUpdateMsgVpnReplicatedTopicDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateMsgVpnReplicatedTopicOK creates a UpdateMsgVpnReplicatedTopicOK with default headers values
func NewUpdateMsgVpnReplicatedTopicOK() *UpdateMsgVpnReplicatedTopicOK {
	return &UpdateMsgVpnReplicatedTopicOK{}
}

/*UpdateMsgVpnReplicatedTopicOK handles this case with default header values.

The Replicated Topic object's attributes after being updated, and the request metadata.
*/
type UpdateMsgVpnReplicatedTopicOK struct {
	Payload *models.MsgVpnReplicatedTopicResponse
}

func (o *UpdateMsgVpnReplicatedTopicOK) Error() string {
	return fmt.Sprintf("[PATCH /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}][%d] updateMsgVpnReplicatedTopicOK  %+v", 200, o.Payload)
}

func (o *UpdateMsgVpnReplicatedTopicOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnReplicatedTopicResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMsgVpnReplicatedTopicDefault creates a UpdateMsgVpnReplicatedTopicDefault with default headers values
func NewUpdateMsgVpnReplicatedTopicDefault(code int) *UpdateMsgVpnReplicatedTopicDefault {
	return &UpdateMsgVpnReplicatedTopicDefault{
		_statusCode: code,
	}
}

/*UpdateMsgVpnReplicatedTopicDefault handles this case with default header values.

The error response.
*/
type UpdateMsgVpnReplicatedTopicDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the update msg vpn replicated topic default response
func (o *UpdateMsgVpnReplicatedTopicDefault) Code() int {
	return o._statusCode
}

func (o *UpdateMsgVpnReplicatedTopicDefault) Error() string {
	return fmt.Sprintf("[PATCH /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}][%d] updateMsgVpnReplicatedTopic default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateMsgVpnReplicatedTopicDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
