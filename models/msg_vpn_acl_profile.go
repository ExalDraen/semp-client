// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MsgVpnACLProfile msg vpn Acl profile
// swagger:model MsgVpnAclProfile
type MsgVpnACLProfile struct {

	// The name of the ACL Profile.
	ACLProfileName string `json:"aclProfileName,omitempty"`

	// The default action to take when a client using the ACL Profile connects to the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:
	//
	// <pre>
	// "allow" - Allow client connection unless an exception is found for it.
	// "disallow" - Disallow client connection unless an exception is found for it.
	// </pre>
	//
	// Enum: [allow disallow]
	ClientConnectDefaultAction string `json:"clientConnectDefaultAction,omitempty"`

	// The name of the Message VPN.
	MsgVpnName string `json:"msgVpnName,omitempty"`

	// The default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:
	//
	// <pre>
	// "allow" - Allow topic unless an exception is found for it.
	// "disallow" - Disallow topic unless an exception is found for it.
	// </pre>
	//
	// Enum: [allow disallow]
	PublishTopicDefaultAction string `json:"publishTopicDefaultAction,omitempty"`

	// The default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:
	//
	// <pre>
	// "allow" - Allow topic unless an exception is found for it.
	// "disallow" - Disallow topic unless an exception is found for it.
	// </pre>
	//
	// Enum: [allow disallow]
	SubscribeTopicDefaultAction string `json:"subscribeTopicDefaultAction,omitempty"`
}

// Validate validates this msg vpn Acl profile
func (m *MsgVpnACLProfile) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientConnectDefaultAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePublishTopicDefaultAction(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubscribeTopicDefaultAction(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var msgVpnAclProfileTypeClientConnectDefaultActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["allow","disallow"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		msgVpnAclProfileTypeClientConnectDefaultActionPropEnum = append(msgVpnAclProfileTypeClientConnectDefaultActionPropEnum, v)
	}
}

const (

	// MsgVpnACLProfileClientConnectDefaultActionAllow captures enum value "allow"
	MsgVpnACLProfileClientConnectDefaultActionAllow string = "allow"

	// MsgVpnACLProfileClientConnectDefaultActionDisallow captures enum value "disallow"
	MsgVpnACLProfileClientConnectDefaultActionDisallow string = "disallow"
)

// prop value enum
func (m *MsgVpnACLProfile) validateClientConnectDefaultActionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, msgVpnAclProfileTypeClientConnectDefaultActionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MsgVpnACLProfile) validateClientConnectDefaultAction(formats strfmt.Registry) error {

	if swag.IsZero(m.ClientConnectDefaultAction) { // not required
		return nil
	}

	// value enum
	if err := m.validateClientConnectDefaultActionEnum("clientConnectDefaultAction", "body", m.ClientConnectDefaultAction); err != nil {
		return err
	}

	return nil
}

var msgVpnAclProfileTypePublishTopicDefaultActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["allow","disallow"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		msgVpnAclProfileTypePublishTopicDefaultActionPropEnum = append(msgVpnAclProfileTypePublishTopicDefaultActionPropEnum, v)
	}
}

const (

	// MsgVpnACLProfilePublishTopicDefaultActionAllow captures enum value "allow"
	MsgVpnACLProfilePublishTopicDefaultActionAllow string = "allow"

	// MsgVpnACLProfilePublishTopicDefaultActionDisallow captures enum value "disallow"
	MsgVpnACLProfilePublishTopicDefaultActionDisallow string = "disallow"
)

// prop value enum
func (m *MsgVpnACLProfile) validatePublishTopicDefaultActionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, msgVpnAclProfileTypePublishTopicDefaultActionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MsgVpnACLProfile) validatePublishTopicDefaultAction(formats strfmt.Registry) error {

	if swag.IsZero(m.PublishTopicDefaultAction) { // not required
		return nil
	}

	// value enum
	if err := m.validatePublishTopicDefaultActionEnum("publishTopicDefaultAction", "body", m.PublishTopicDefaultAction); err != nil {
		return err
	}

	return nil
}

var msgVpnAclProfileTypeSubscribeTopicDefaultActionPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["allow","disallow"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		msgVpnAclProfileTypeSubscribeTopicDefaultActionPropEnum = append(msgVpnAclProfileTypeSubscribeTopicDefaultActionPropEnum, v)
	}
}

const (

	// MsgVpnACLProfileSubscribeTopicDefaultActionAllow captures enum value "allow"
	MsgVpnACLProfileSubscribeTopicDefaultActionAllow string = "allow"

	// MsgVpnACLProfileSubscribeTopicDefaultActionDisallow captures enum value "disallow"
	MsgVpnACLProfileSubscribeTopicDefaultActionDisallow string = "disallow"
)

// prop value enum
func (m *MsgVpnACLProfile) validateSubscribeTopicDefaultActionEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, msgVpnAclProfileTypeSubscribeTopicDefaultActionPropEnum); err != nil {
		return err
	}
	return nil
}

func (m *MsgVpnACLProfile) validateSubscribeTopicDefaultAction(formats strfmt.Registry) error {

	if swag.IsZero(m.SubscribeTopicDefaultAction) { // not required
		return nil
	}

	// value enum
	if err := m.validateSubscribeTopicDefaultActionEnum("subscribeTopicDefaultAction", "body", m.SubscribeTopicDefaultAction); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *MsgVpnACLProfile) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MsgVpnACLProfile) UnmarshalBinary(b []byte) error {
	var res MsgVpnACLProfile
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
