// Code generated by go-swagger; DO NOT EDIT.

package system_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// GetSystemInformationReader is a Reader for the GetSystemInformation structure.
type GetSystemInformationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSystemInformationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSystemInformationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetSystemInformationDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSystemInformationOK creates a GetSystemInformationOK with default headers values
func NewGetSystemInformationOK() *GetSystemInformationOK {
	return &GetSystemInformationOK{}
}

/*GetSystemInformationOK handles this case with default header values.

SEMP API version and platform information.
*/
type GetSystemInformationOK struct {
	Payload *models.SystemInformationResponse
}

func (o *GetSystemInformationOK) Error() string {
	return fmt.Sprintf("[GET /systemInformation][%d] getSystemInformationOK  %+v", 200, o.Payload)
}

func (o *GetSystemInformationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemInformationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSystemInformationDefault creates a GetSystemInformationDefault with default headers values
func NewGetSystemInformationDefault(code int) *GetSystemInformationDefault {
	return &GetSystemInformationDefault{
		_statusCode: code,
	}
}

/*GetSystemInformationDefault handles this case with default header values.

Error response
*/
type GetSystemInformationDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the get system information default response
func (o *GetSystemInformationDefault) Code() int {
	return o._statusCode
}

func (o *GetSystemInformationDefault) Error() string {
	return fmt.Sprintf("[GET /systemInformation][%d] getSystemInformation default  %+v", o._statusCode, o.Payload)
}

func (o *GetSystemInformationDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
