// Code generated by go-swagger; DO NOT EDIT.

package dmr_cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// UpdateDmrClusterReader is a Reader for the UpdateDmrCluster structure.
type UpdateDmrClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDmrClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateDmrClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUpdateDmrClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateDmrClusterOK creates a UpdateDmrClusterOK with default headers values
func NewUpdateDmrClusterOK() *UpdateDmrClusterOK {
	return &UpdateDmrClusterOK{}
}

/*UpdateDmrClusterOK handles this case with default header values.

The Cluster object's attributes after being updated, and the request metadata.
*/
type UpdateDmrClusterOK struct {
	Payload *models.DmrClusterResponse
}

func (o *UpdateDmrClusterOK) Error() string {
	return fmt.Sprintf("[PATCH /dmrClusters/{dmrClusterName}][%d] updateDmrClusterOK  %+v", 200, o.Payload)
}

func (o *UpdateDmrClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DmrClusterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDmrClusterDefault creates a UpdateDmrClusterDefault with default headers values
func NewUpdateDmrClusterDefault(code int) *UpdateDmrClusterDefault {
	return &UpdateDmrClusterDefault{
		_statusCode: code,
	}
}

/*UpdateDmrClusterDefault handles this case with default header values.

The error response.
*/
type UpdateDmrClusterDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the update dmr cluster default response
func (o *UpdateDmrClusterDefault) Code() int {
	return o._statusCode
}

func (o *UpdateDmrClusterDefault) Error() string {
	return fmt.Sprintf("[PATCH /dmrClusters/{dmrClusterName}][%d] updateDmrCluster default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateDmrClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
