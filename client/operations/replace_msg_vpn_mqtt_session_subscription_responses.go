// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// ReplaceMsgVpnMqttSessionSubscriptionReader is a Reader for the ReplaceMsgVpnMqttSessionSubscription structure.
type ReplaceMsgVpnMqttSessionSubscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceMsgVpnMqttSessionSubscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReplaceMsgVpnMqttSessionSubscriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewReplaceMsgVpnMqttSessionSubscriptionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceMsgVpnMqttSessionSubscriptionOK creates a ReplaceMsgVpnMqttSessionSubscriptionOK with default headers values
func NewReplaceMsgVpnMqttSessionSubscriptionOK() *ReplaceMsgVpnMqttSessionSubscriptionOK {
	return &ReplaceMsgVpnMqttSessionSubscriptionOK{}
}

/*ReplaceMsgVpnMqttSessionSubscriptionOK handles this case with default header values.

The MQTT Session Subscription object's attributes after being replaced, and the request metadata.
*/
type ReplaceMsgVpnMqttSessionSubscriptionOK struct {
	Payload *models.MsgVpnMqttSessionSubscriptionResponse
}

func (o *ReplaceMsgVpnMqttSessionSubscriptionOK) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}][%d] replaceMsgVpnMqttSessionSubscriptionOK  %+v", 200, o.Payload)
}

func (o *ReplaceMsgVpnMqttSessionSubscriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnMqttSessionSubscriptionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceMsgVpnMqttSessionSubscriptionDefault creates a ReplaceMsgVpnMqttSessionSubscriptionDefault with default headers values
func NewReplaceMsgVpnMqttSessionSubscriptionDefault(code int) *ReplaceMsgVpnMqttSessionSubscriptionDefault {
	return &ReplaceMsgVpnMqttSessionSubscriptionDefault{
		_statusCode: code,
	}
}

/*ReplaceMsgVpnMqttSessionSubscriptionDefault handles this case with default header values.

Error response
*/
type ReplaceMsgVpnMqttSessionSubscriptionDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the replace msg vpn mqtt session subscription default response
func (o *ReplaceMsgVpnMqttSessionSubscriptionDefault) Code() int {
	return o._statusCode
}

func (o *ReplaceMsgVpnMqttSessionSubscriptionDefault) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}][%d] replaceMsgVpnMqttSessionSubscription default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceMsgVpnMqttSessionSubscriptionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
