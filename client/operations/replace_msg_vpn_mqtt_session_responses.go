// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// ReplaceMsgVpnMqttSessionReader is a Reader for the ReplaceMsgVpnMqttSession structure.
type ReplaceMsgVpnMqttSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReplaceMsgVpnMqttSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewReplaceMsgVpnMqttSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewReplaceMsgVpnMqttSessionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewReplaceMsgVpnMqttSessionOK creates a ReplaceMsgVpnMqttSessionOK with default headers values
func NewReplaceMsgVpnMqttSessionOK() *ReplaceMsgVpnMqttSessionOK {
	return &ReplaceMsgVpnMqttSessionOK{}
}

/*ReplaceMsgVpnMqttSessionOK handles this case with default header values.

The MQTT Session object's attributes after being replaced, and the request metadata.
*/
type ReplaceMsgVpnMqttSessionOK struct {
	Payload *models.MsgVpnMqttSessionResponse
}

func (o *ReplaceMsgVpnMqttSessionOK) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}][%d] replaceMsgVpnMqttSessionOK  %+v", 200, o.Payload)
}

func (o *ReplaceMsgVpnMqttSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnMqttSessionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReplaceMsgVpnMqttSessionDefault creates a ReplaceMsgVpnMqttSessionDefault with default headers values
func NewReplaceMsgVpnMqttSessionDefault(code int) *ReplaceMsgVpnMqttSessionDefault {
	return &ReplaceMsgVpnMqttSessionDefault{
		_statusCode: code,
	}
}

/*ReplaceMsgVpnMqttSessionDefault handles this case with default header values.

Error response
*/
type ReplaceMsgVpnMqttSessionDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the replace msg vpn mqtt session default response
func (o *ReplaceMsgVpnMqttSessionDefault) Code() int {
	return o._statusCode
}

func (o *ReplaceMsgVpnMqttSessionDefault) Error() string {
	return fmt.Sprintf("[PUT /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}][%d] replaceMsgVpnMqttSession default  %+v", o._statusCode, o.Payload)
}

func (o *ReplaceMsgVpnMqttSessionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
