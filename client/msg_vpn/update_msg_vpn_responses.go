// Code generated by go-swagger; DO NOT EDIT.

package msg_vpn

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ExalDraen/semp-client/models"
)

// UpdateMsgVpnReader is a Reader for the UpdateMsgVpn structure.
type UpdateMsgVpnReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateMsgVpnReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewUpdateMsgVpnOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUpdateMsgVpnDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateMsgVpnOK creates a UpdateMsgVpnOK with default headers values
func NewUpdateMsgVpnOK() *UpdateMsgVpnOK {
	return &UpdateMsgVpnOK{}
}

/*UpdateMsgVpnOK handles this case with default header values.

The Message VPN object's attributes after being updated, and the request metadata.
*/
type UpdateMsgVpnOK struct {
	Payload *models.MsgVpnResponse
}

func (o *UpdateMsgVpnOK) Error() string {
	return fmt.Sprintf("[PATCH /msgVpns/{msgVpnName}][%d] updateMsgVpnOK  %+v", 200, o.Payload)
}

func (o *UpdateMsgVpnOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MsgVpnResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateMsgVpnDefault creates a UpdateMsgVpnDefault with default headers values
func NewUpdateMsgVpnDefault(code int) *UpdateMsgVpnDefault {
	return &UpdateMsgVpnDefault{
		_statusCode: code,
	}
}

/*UpdateMsgVpnDefault handles this case with default header values.

Error response
*/
type UpdateMsgVpnDefault struct {
	_statusCode int

	Payload *models.SempMetaOnlyResponse
}

// Code gets the status code for the update msg vpn default response
func (o *UpdateMsgVpnDefault) Code() int {
	return o._statusCode
}

func (o *UpdateMsgVpnDefault) Error() string {
	return fmt.Sprintf("[PATCH /msgVpns/{msgVpnName}][%d] updateMsgVpn default  %+v", o._statusCode, o.Payload)
}

func (o *UpdateMsgVpnDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SempMetaOnlyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
