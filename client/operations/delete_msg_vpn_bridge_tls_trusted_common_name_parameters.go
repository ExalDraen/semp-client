// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteMsgVpnBridgeTLSTrustedCommonNameParams creates a new DeleteMsgVpnBridgeTLSTrustedCommonNameParams object
// with the default values initialized.
func NewDeleteMsgVpnBridgeTLSTrustedCommonNameParams() *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	var ()
	return &DeleteMsgVpnBridgeTLSTrustedCommonNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteMsgVpnBridgeTLSTrustedCommonNameParamsWithTimeout creates a new DeleteMsgVpnBridgeTLSTrustedCommonNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteMsgVpnBridgeTLSTrustedCommonNameParamsWithTimeout(timeout time.Duration) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	var ()
	return &DeleteMsgVpnBridgeTLSTrustedCommonNameParams{

		timeout: timeout,
	}
}

// NewDeleteMsgVpnBridgeTLSTrustedCommonNameParamsWithContext creates a new DeleteMsgVpnBridgeTLSTrustedCommonNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteMsgVpnBridgeTLSTrustedCommonNameParamsWithContext(ctx context.Context) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	var ()
	return &DeleteMsgVpnBridgeTLSTrustedCommonNameParams{

		Context: ctx,
	}
}

// NewDeleteMsgVpnBridgeTLSTrustedCommonNameParamsWithHTTPClient creates a new DeleteMsgVpnBridgeTLSTrustedCommonNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteMsgVpnBridgeTLSTrustedCommonNameParamsWithHTTPClient(client *http.Client) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	var ()
	return &DeleteMsgVpnBridgeTLSTrustedCommonNameParams{
		HTTPClient: client,
	}
}

/*DeleteMsgVpnBridgeTLSTrustedCommonNameParams contains all the parameters to send to the API endpoint
for the delete msg vpn bridge Tls trusted common name operation typically these are written to a http.Request
*/
type DeleteMsgVpnBridgeTLSTrustedCommonNameParams struct {

	/*BridgeName
	  The name of the Bridge.

	*/
	BridgeName string
	/*BridgeVirtualRouter
	  The virtual router of the Bridge.

	*/
	BridgeVirtualRouter string
	/*MsgVpnName
	  The name of the Message VPN.

	*/
	MsgVpnName string
	/*TLSTrustedCommonName
	  The expected trusted common name of the remote certificate.

	*/
	TLSTrustedCommonName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WithTimeout(timeout time.Duration) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WithContext(ctx context.Context) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WithHTTPClient(client *http.Client) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBridgeName adds the bridgeName to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WithBridgeName(bridgeName string) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	o.SetBridgeName(bridgeName)
	return o
}

// SetBridgeName adds the bridgeName to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) SetBridgeName(bridgeName string) {
	o.BridgeName = bridgeName
}

// WithBridgeVirtualRouter adds the bridgeVirtualRouter to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WithBridgeVirtualRouter(bridgeVirtualRouter string) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	o.SetBridgeVirtualRouter(bridgeVirtualRouter)
	return o
}

// SetBridgeVirtualRouter adds the bridgeVirtualRouter to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) SetBridgeVirtualRouter(bridgeVirtualRouter string) {
	o.BridgeVirtualRouter = bridgeVirtualRouter
}

// WithMsgVpnName adds the msgVpnName to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WithMsgVpnName(msgVpnName string) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	o.SetMsgVpnName(msgVpnName)
	return o
}

// SetMsgVpnName adds the msgVpnName to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) SetMsgVpnName(msgVpnName string) {
	o.MsgVpnName = msgVpnName
}

// WithTLSTrustedCommonName adds the tLSTrustedCommonName to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WithTLSTrustedCommonName(tLSTrustedCommonName string) *DeleteMsgVpnBridgeTLSTrustedCommonNameParams {
	o.SetTLSTrustedCommonName(tLSTrustedCommonName)
	return o
}

// SetTLSTrustedCommonName adds the tlsTrustedCommonName to the delete msg vpn bridge Tls trusted common name params
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) SetTLSTrustedCommonName(tLSTrustedCommonName string) {
	o.TLSTrustedCommonName = tLSTrustedCommonName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteMsgVpnBridgeTLSTrustedCommonNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param bridgeName
	if err := r.SetPathParam("bridgeName", o.BridgeName); err != nil {
		return err
	}

	// path param bridgeVirtualRouter
	if err := r.SetPathParam("bridgeVirtualRouter", o.BridgeVirtualRouter); err != nil {
		return err
	}

	// path param msgVpnName
	if err := r.SetPathParam("msgVpnName", o.MsgVpnName); err != nil {
		return err
	}

	// path param tlsTrustedCommonName
	if err := r.SetPathParam("tlsTrustedCommonName", o.TLSTrustedCommonName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
